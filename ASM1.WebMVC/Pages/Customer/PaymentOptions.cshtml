@page "{orderId:int}"
@model ASM1.WebMVC.Pages.Customer.PaymentOptionsModel
@{
	ViewData["Title"] = "Payment Options";
	var order = Model.Order;
	var payments = Model.Payments;
	var remainingBalance = Model.RemainingBalance;
}

<div class="container-fluid">
	<!-- Header -->
	<div class="row mb-4">
		<div class="col-12 d-flex justify-content-between align-items-center">
			<div>
				<h2><i class="fas fa-credit-card text-primary"></i> Payment Options</h2>
				<p class="text-muted">Make payment for Order #O@order?.OrderId.ToString("000")</p>
			</div>
			<div>
				<a asp-page="/Customer/MyOrders" class="btn btn-outline-secondary">
					<i class="fas fa-arrow-left"></i> Back to Orders
				</a>
			</div>
		</div>
	</div>

	<div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

	<div class="row">
		<!-- ORDER SUMMARY -->
		<div class="col-lg-4">
			<div class="card mb-4">
				<div class="card-header bg-info text-white">
					<h5 class="mb-0"><i class="fas fa-shopping-bag"></i> Order Summary</h5>
				</div>
				<div class="card-body text-center">
					@if (!string.IsNullOrEmpty(order?.Variant?.VehicleModel?.ImageUrl))
					{
						<img src="@order.Variant.VehicleModel.ImageUrl"
							 alt="Car Image"
							 class="img-fluid rounded mb-3 shadow-sm"
							 style="max-height: 200px; object-fit: cover;">
					}
					else
					{
						<div class="text-muted mb-3">(No image available)</div>
					}

					<h6>@(order?.Variant?.VehicleModel?.Name ?? "N/A")</h6>
					<p class="text-muted">@($"{order?.Variant?.Version ?? "N/A"} - {order?.Variant?.Color ?? "N/A"}")</p>

					<table class="table table-sm text-start">
						<tr><td><strong>Order ID:</strong></td><td>#O@order?.OrderId.ToString("000")</td></tr>
						<tr><td><strong>Order Date:</strong></td><td>@(order?.OrderDate?.ToString("dd/MM/yyyy") ?? "N/A")</td></tr>
						<tr>
							<td><strong>Status:</strong></td>
							<td>
								<span class="badge @GetStatusBadgeClass(order?.Status ?? "Unknown")">
									@(order?.Status ?? "Unknown")
								</span>
							</td>
						</tr>
						<tr><td><strong>Dealer:</strong></td><td>@(order?.Dealer?.FullName ?? "N/A")</td></tr>
					</table>
				</div>
			</div>

			<!-- PAYMENT SUMMARY -->
			<div class="card">
				<div class="card-header bg-success text-white">
					<h5 class="mb-0"><i class="fas fa-calculator"></i> Payment Summary</h5>
				</div>
				<div class="card-body">
					<div class="row mb-2">
						<div class="col">Vehicle Price:</div>
						<div class="col text-end">$@(order?.Variant?.Price?.ToString("N0") ?? "0")</div>
					</div>

					@if (payments?.Any() == true)
					{
						<div class="row mb-2">
							<div class="col">Total Paid:</div>
							<div class="col text-end text-success">
								$@(payments.Sum(p => p.Amount ?? 0).ToString("N0"))
							</div>
						</div>
					}

					<hr>
					<div class="row">
						<div class="col"><strong>Remaining Balance:</strong></div>
						<div class="col text-end">
							<strong class="@(remainingBalance > 0 ? "text-danger" : "text-success")">
								$@remainingBalance.ToString("N0")
							</strong>
						</div>
					</div>

					@if (remainingBalance <= 0)
					{
						<div class="alert alert-success mt-3 mb-0">
							<i class="fas fa-check-circle"></i> Order is fully paid!
						</div>
					}
				</div>
			</div>
		</div>

		<!-- PAYMENT FORM -->
		<div class="col-lg-8">
			@if (remainingBalance > 0 && (order?.Status == "Confirmed" || order?.Status == "Pending"))
			{
				<div class="card">
					<div class="card-header bg-primary text-white">
						<h5 class="mb-0"><i class="fas fa-money-bill-wave"></i> Make Payment</h5>
					</div>
					<div class="card-body">
						<form id="paymentForm" method="post">
							@Html.AntiForgeryToken()
							<input type="hidden" id="orderId" value="@order?.OrderId" />

							<!-- PAYMENT AMOUNT -->
							<div class="mb-4">
								<label class="form-label">Payment Amount *</label>
								<div class="input-group">
									<span class="input-group-text">$</span>
									<input type="number"
										   class="form-control"
										   id="paymentAmount"
										   max="@remainingBalance"
										   min="1"
										   step="0.01"
										   required
										   placeholder="Enter amount" />
								</div>
								<div class="form-text">Maximum: $@remainingBalance.ToString("N2")</div>
							</div>

							<!-- PAYMENT METHOD -->
							<div class="mb-4">
								<label class="form-label">Payment Method *</label>
								<div class="row">
									<div class="col-md-3">
										<div class="card payment-method" onclick="selectPaymentMethod('Credit Card', this)">
											<div class="card-body text-center">
												<i class="fas fa-credit-card fa-2x text-primary mb-2"></i>
												<div>Credit Card</div>
											</div>
										</div>
									</div>
									<div class="col-md-3">
										<div class="card payment-method" onclick="selectPaymentMethod('Bank Transfer', this)">
											<div class="card-body text-center">
												<i class="fas fa-university fa-2x text-success mb-2"></i>
												<div>Bank Transfer</div>
											</div>
										</div>
									</div>
									<div class="col-md-3">
										<div class="card payment-method" onclick="selectPaymentMethod('Cash', this)">
											<div class="card-body text-center">
												<i class="fas fa-money-bill-wave fa-2x text-warning mb-2"></i>
												<div>Cash</div>
											</div>
										</div>
									</div>
									<div class="col-md-3">
										<div class="card payment-method" onclick="selectPaymentMethod('Check', this)">
											<div class="card-body text-center">
												<i class="fas fa-file-invoice-dollar fa-2x text-info mb-2"></i>
												<div>Check</div>
											</div>
										</div>
									</div>
								</div>
								<input type="hidden" id="paymentMethod" required />
							</div>

							<!-- SUBMIT -->
							<div class="text-end">
								<button type="submit" class="btn btn-success btn-lg">
									<i class="fas fa-credit-card"></i> Process Payment
								</button>
							</div>
						</form>
					</div>
				</div>
			}

			<!-- PAYMENT HISTORY -->
			@if (payments?.Any() == true)
			{
				<div class="card mt-4">
					<div class="card-header">
						<h5 class="mb-0"><i class="fas fa-history"></i> Payment History</h5>
					</div>
					<div class="card-body">
						<table class="table table-striped">
							<thead>
								<tr><th>Date</th><th>Amount</th><th>Method</th><th>Status</th></tr>
							</thead>
							<tbody>
								@foreach (var p in payments)
								{
									<tr>
										<td>@(p.PaymentDate?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</td>
										<td>$@((p.Amount ?? 0).ToString("N0"))</td>
										<td>@(p.PaymentMethod ?? "N/A")</td>
										<td><span class="badge bg-success">@(p.Status ?? "Completed")</span></td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			}
		</div>
	</div>
</div>

@functions {
	string GetStatusBadgeClass(string status) =>
		status switch
		{
			"Pending" => "bg-warning text-dark",
			"Confirmed" => "bg-info",
			"Paid" => "bg-success",
			"Processing" => "bg-primary",
			"Completed" => "bg-success",
			"Cancelled" => "bg-danger",
			_ => "bg-secondary"
		};
}

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
	<script>
		$('#paymentForm').on('submit', function (e) {
			e.preventDefault();

			const orderId = $('#orderId').val();
			const amount = $('#paymentAmount').val();
			const method = $('#paymentMethod').val();
			const token = $('input[name="__RequestVerificationToken"]').val();

			if (!amount || amount <= 0) {
				alert('Please enter a valid payment amount.');
				return;
			}
			if (!method) {
				alert('Please select a payment method.');
				return;
			}

			if (confirm(`Confirm payment of $${parseFloat(amount).toLocaleString()} via ${method}?`)) {
				$('#paymentForm button').prop('disabled', true);

				$.ajax({
					url: window.location.pathname,
					type: 'POST',
					data: {
						OrderId: orderId,
						PaymentAmount: amount,
						PaymentMethod: method,
						__RequestVerificationToken: token
					},
					success: function (res) {
						if (res.success) {
							alert(res.message);
							location.reload();
						} else {
							alert('Error: ' + res.message);
						}
					},
					error: function () {
						alert('Payment failed. Try again.');
					},
					complete: function () {
						$('#paymentForm button').prop('disabled', false);
					}
				});
			}
		});

		function selectPaymentMethod(method, el) {
			$('.payment-method').removeClass('border-primary bg-light');
			$(el).addClass('border-primary bg-light');
			$('#paymentMethod').val(method);
		}
	</script>

	<style>
		.payment-method {
			cursor: pointer;
			border: 2px solid #dee2e6;
			transition: all 0.2s;
		}

			.payment-method:hover {
				border-color: #007bff;
				transform: translateY(-2px);
				box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
			}

			.payment-method.border-primary {
				border-color: #007bff !important;
				box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
			}
	</style>
}
