@* 
    Chuyển đổi từ: Views/Customer/PaymentOptions.cshtml
    Thay đổi: Form POST với validation và error handling
    Điểm đặc biệt: Multiple data bindings, validation messages
*@
@page "{orderId:int}"
@model ASM1.WebMVC.Pages.Customer.PaymentOptionsModel
@{
    ViewData["Title"] = "Payment Options";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2><i class="fas fa-credit-card text-primary"></i> Payment Options</h2>
                    <p class="text-muted">Make payment for Order #O@(Model.Order?.OrderId.ToString("000") ?? "000")</p>
                </div>
                <div>
                    <a asp-page="/Customer/MyOrders" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Orders
                    </a>
                </div>
            </div>
        </div>
    </div>

    @* Display validation summary *@
    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

    <div class="row">
        <!-- Order Summary -->
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-shopping-bag"></i> Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <h6>@(Model.Order?.Variant?.VehicleModel?.Name ?? "N/A")</h6>
                        <p class="text-muted">@(Model.Order?.Variant?.Version ?? "N/A") - @(Model.Order?.Variant?.Color ?? "N/A")</p>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <tr>
                                <td><strong>Order ID:</strong></td>
                                <td>#O@(Model.Order?.OrderId.ToString("000") ?? "000")</td>
                            </tr>
                            <tr>
                                <td><strong>Order Date:</strong></td>
                                <td>@(Model.Order?.OrderDate?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                            </tr>
                            <tr>
                                <td><strong>Status:</strong></td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(Model.Order?.Status ?? "Unknown")">
                                        @(Model.Order?.Status ?? "Unknown")
                                    </span>
                                </td>
                            </tr>
                            <tr>
                                <td><strong>Dealer:</strong></td>
                                <td>@(Model.Order?.Dealer?.FullName ?? "N/A")</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Payment Summary -->
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0"><i class="fas fa-calculator"></i> Payment Summary</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col">Vehicle Price:</div>
                        <div class="col text-end">$@(Model.Order?.Variant?.Price?.ToString("N0") ?? "0")</div>
                    </div>
                    @if (Model.Payments?.Any() == true)
                    {
                        <div class="row mb-2">
                            <div class="col">Total Paid:</div>
                            <div class="col text-end text-success">$@(Model.Payments.Sum(p => p.Amount ?? 0).ToString("N0"))</div>
                        </div>
                    }
                    <hr>
                    <div class="row">
                        <div class="col"><strong>Remaining Balance:</strong></div>
                        <div class="col text-end">
                            <strong class="@(Model.RemainingBalance > 0 ? "text-danger" : "text-success")">
                                $@(Model.RemainingBalance.ToString("N0"))
                            </strong>
                        </div>
                    </div>
                    
                    @if (Model.RemainingBalance <= 0)
                    {
                        <div class="alert alert-success mt-3 mb-0">
                            <i class="fas fa-check-circle"></i> Order is fully paid!
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Payment Form -->
        <div class="col-lg-8">
            @if (Model.RemainingBalance > 0 && (Model.Order?.Status == "Confirmed" || Model.Order?.Status == "Pending"))
            {
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0"><i class="fas fa-credit-card"></i> Make Payment</h5>
                    </div>
                    <div class="card-body">
                        <!-- Đổi từ form method="post" sang form id="paymentForm" như Views cũ -->
                        <form id="paymentForm">
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="orderId" value="@Model.Order.OrderId" />
                            
                            <!-- Payment Amount -->
                            <div class="row mb-4">
                                <div class="col-md-6">
                                    <label class="form-label">Payment Amount *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input type="number" class="form-control" id="paymentAmount" 
                                               max="@Model.RemainingBalance" min="1" step="0.01" required
                                               placeholder="Enter amount">
                                    </div>
                                    <div class="form-text">Maximum: $@Model.RemainingBalance.ToString("N2")</div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Quick Amounts</label>
                                    <div class="d-flex flex-wrap gap-2">
                                        @if (Model.RemainingBalance >= 1000)
                                        {
                                            <button type="button" class="btn btn-outline-secondary btn-sm" 
                                                    onclick="setPaymentAmount(1000)">$1,000</button>
                                        }
                                        @if (Model.RemainingBalance >= 5000)
                                        {
                                            <button type="button" class="btn btn-outline-secondary btn-sm" 
                                                    onclick="setPaymentAmount(5000)">$5,000</button>
                                        }
                                        @if (Model.RemainingBalance >= 10000)
                                        {
                                            <button type="button" class="btn btn-outline-secondary btn-sm" 
                                                    onclick="setPaymentAmount(10000)">$10,000</button>
                                        }
                                        <button type="button" class="btn btn-outline-primary btn-sm" 
                                                onclick="setPaymentAmount(@Model.RemainingBalance)">Full Amount</button>
                                    </div>
                                </div>
                            </div>

                            <!-- Payment Method -->
                            <div class="row mb-4">
                                <div class="col-12">
                                    <label class="form-label">Payment Method *</label>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="card payment-method" onclick="selectPaymentMethod('Credit Card', this)">
                                                <div class="card-body text-center">
                                                    <i class="fas fa-credit-card fa-2x text-primary mb-2"></i>
                                                    <div>Credit Card</div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card payment-method" onclick="selectPaymentMethod('Bank Transfer', this)">
                                                <div class="card-body text-center">
                                                    <i class="fas fa-university fa-2x text-success mb-2"></i>
                                                    <div>Bank Transfer</div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card payment-method" onclick="selectPaymentMethod('Cash', this)">
                                                <div class="card-body text-center">
                                                    <i class="fas fa-money-bill-wave fa-2x text-warning mb-2"></i>
                                                    <div>Cash</div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="card payment-method" onclick="selectPaymentMethod('Check', this)">
                                                <div class="card-body text-center">
                                                    <i class="fas fa-file-invoice-dollar fa-2x text-info mb-2"></i>
                                                    <div>Check</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Đổi từ hidden input với asp-for sang id như Views cũ -->
                                    <input type="hidden" id="paymentMethod" required />
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <div class="row">
                                <div class="col-12">
                                    <div class="d-flex justify-content-between">
                                        <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">
                                            <i class="fas fa-undo"></i> Reset
                                        </button>
                                        <!-- Đổi type="submit" thành type="submit" nhưng xử lý bằng jQuery -->
                                        <button type="submit" class="btn btn-success btn-lg">
                                            <i class="fas fa-credit-card"></i> Process Payment
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            }


            <!-- Payment History -->
            @if (Model.Payments?.Any() == true)
            {
                <div class="card mt-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-history"></i> Payment History</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Amount</th>
                                        <th>Method</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var payment in Model.Payments)
                                    {
                                        <tr>
                                            <td>@(payment?.PaymentDate?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</td>
                                            <td>$@((payment?.Amount ?? 0).ToString("N0"))</td>
                                            <td>@(payment?.PaymentMethod ?? "N/A")</td>
                                            <td>
                                                <span class="badge bg-success">@(payment?.Status ?? "Completed")</span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Pending" => "bg-warning text-dark",
            "Confirmed" => "bg-info",
            "Paid" => "bg-success",
            "Processing" => "bg-primary",
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        let selectedPaymentMethod = '';

        // jQuery form submit handler - GIỐNG VIEWS CŨ HOÀN TOÀN
        $('#paymentForm').on('submit', function(e) {
            e.preventDefault();
            
            const orderId = $('#orderId').val();
            const amount = $('#paymentAmount').val();
            const paymentMethod = $('#paymentMethod').val();
            
            console.log('Form submit - orderId:', orderId, 'amount:', amount, 'method:', paymentMethod);
            
            if (!amount || amount <= 0) {
                alert('Please enter a valid payment amount.');
                return;
            }
            
            if (!paymentMethod) {
                alert('Please select a payment method.');
                return;
            }
            
            if (confirm(`Process payment of $${parseFloat(amount).toLocaleString()} via ${paymentMethod}?`)) {
                // Disable form
                $('#paymentForm button').prop('disabled', true);
                
                // AJAX POST đến OnPostAsync của Razor Pages
                $.ajax({
                    url: window.location.pathname, // POST đến chính page này
                    type: 'POST',
                    data: {
                        OrderId: orderId,
                        PaymentAmount: amount,
                        PaymentMethod: paymentMethod,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        alert('Payment processed successfully!');
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        console.error('Payment error:', error);
                        alert('Error processing payment. Please try again.');
                        $('#paymentForm button').prop('disabled', false);
                    }
                });
            }
        });

        function setPaymentAmount(amount) {
            $('#paymentAmount').val(amount);
        }

        function selectPaymentMethod(method, element) {
            $('.payment-method').removeClass('border-primary bg-light');
            $(element).addClass('border-primary bg-light');
            $('#paymentMethod').val(method);
            selectedPaymentMethod = method;
        }

        function resetForm() {
            $('#paymentForm')[0].reset();
            $('.payment-method').removeClass('border-primary bg-light');
            $('#paymentMethod').val('');
            selectedPaymentMethod = '';
        }
    </script>

    <style>
        .payment-method {
            cursor: pointer;
            transition: all 0.2s;
            border: 2px solid #dee2e6;
        }
        
        .payment-method:hover {
            border-color: #007bff;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .payment-method.border-primary {
            border-color: #007bff !important;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
        }
    </style>
}
